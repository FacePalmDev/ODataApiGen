import { deviceManagementSubscriptionState } from './devicemanagementsubscriptionstate.enum';
import { deviceManagementSettings } from './devicemanagementsettings.interface';
import { intuneBrand } from './intunebrand.interface';
import { entity } from './entity.interface';
import { managedDevice } from './manageddevice.interface';
import { deviceManagementTroubleshootingEvent } from './devicemanagementtroubleshootingevent.interface';
import { termsAndConditions } from './termsandconditions.interface';
import { deviceConfiguration } from './deviceconfiguration.interface';
import { deviceCompliancePolicy } from './devicecompliancepolicy.interface';
import { softwareUpdateStatusSummary } from './softwareupdatestatussummary.interface';
import { deviceCompliancePolicyDeviceStateSummary } from './devicecompliancepolicydevicestatesummary.interface';
import { deviceCompliancePolicySettingStateSummary } from './devicecompliancepolicysettingstatesummary.interface';
import { deviceConfigurationDeviceStateSummary } from './deviceconfigurationdevicestatesummary.interface';
import { iosUpdateDeviceStatus } from './iosupdatedevicestatus.interface';
import { deviceCategory } from './devicecategory.interface';
import { deviceManagementExchangeConnector } from './devicemanagementexchangeconnector.interface';
import { deviceEnrollmentConfiguration } from './deviceenrollmentconfiguration.interface';
import { onPremisesConditionalAccessSettings } from './onpremisesconditionalaccesssettings.interface';
import { mobileThreatDefenseConnector } from './mobilethreatdefenseconnector.interface';
import { deviceManagementPartner } from './devicemanagementpartner.interface';
import { applePushNotificationCertificate } from './applepushnotificationcertificate.interface';
import { managedDeviceOverview } from './manageddeviceoverview.interface';
import { detectedApp } from './detectedapp.interface';
import { notificationMessageTemplate } from './notificationmessagetemplate.interface';
import { roleDefinition } from './roledefinition.interface';
import { deviceAndAppManagementRoleAssignment } from './deviceandappmanagementroleassignment.interface';
import { resourceOperation } from './resourceoperation.interface';
import { remoteAssistancePartner } from './remoteassistancepartner.interface';
import { telecomExpenseManagementPartner } from './telecomexpensemanagementpartner.interface';
import { windowsInformationProtectionAppLearningSummary } from './windowsinformationprotectionapplearningsummary.interface';
import { windowsInformationProtectionNetworkLearningSummary } from './windowsinformationprotectionnetworklearningsummary.interface';

export interface deviceManagement extends entity {
  settings: deviceManagementSettings;
  intuneBrand: intuneBrand;
  subscriptionState: deviceManagementSubscriptionState;
  termsAndConditions?: termsAndConditions[];
  deviceConfigurations?: deviceConfiguration[];
  deviceCompliancePolicies?: deviceCompliancePolicy[];
  softwareUpdateStatusSummary?: softwareUpdateStatusSummary;
  deviceCompliancePolicyDeviceStateSummary?: deviceCompliancePolicyDeviceStateSummary;
  deviceCompliancePolicySettingStateSummaries?: deviceCompliancePolicySettingStateSummary[];
  deviceConfigurationDeviceStateSummaries?: deviceConfigurationDeviceStateSummary;
  iosUpdateStatuses?: iosUpdateDeviceStatus[];
  deviceCategories?: deviceCategory[];
  exchangeConnectors?: deviceManagementExchangeConnector[];
  deviceEnrollmentConfigurations?: deviceEnrollmentConfiguration[];
  conditionalAccessSettings?: onPremisesConditionalAccessSettings;
  mobileThreatDefenseConnectors?: mobileThreatDefenseConnector[];
  deviceManagementPartners?: deviceManagementPartner[];
  applePushNotificationCertificate?: applePushNotificationCertificate;
  managedDeviceOverview?: managedDeviceOverview;
  detectedApps?: detectedApp[];
  managedDevices?: managedDevice[];
  notificationMessageTemplates?: notificationMessageTemplate[];
  roleDefinitions?: roleDefinition[];
  roleAssignments?: deviceAndAppManagementRoleAssignment[];
  resourceOperations?: resourceOperation[];
  remoteAssistancePartners?: remoteAssistancePartner[];
  telecomExpenseManagementPartners?: telecomExpenseManagementPartner[];
  troubleshootingEvents?: deviceManagementTroubleshootingEvent[];
  windowsInformationProtectionAppLearningSummaries?: windowsInformationProtectionAppLearningSummary[];
  windowsInformationProtectionNetworkLearningSummaries?: windowsInformationProtectionNetworkLearningSummary[]
}
