import { freeBusyStatus } from './freebusystatus.enum';
import { importance } from './importance.enum';
import { sensitivity } from './sensitivity.enum';
import { eventType } from './eventtype.enum';
import { recipient } from './recipient.interface';
import { dateTimeTimeZone } from './datetimetimezone.interface';
import { location } from './location.interface';
import { itemBody } from './itembody.interface';
import { responseStatus } from './responsestatus.interface';
import { patternedRecurrence } from './patternedrecurrence.interface';
import { attendee } from './attendee.interface';
import { outlookItem } from './outlookitem.interface';
import { calendar } from './calendar.interface';
import { extension } from './extension.interface';
import { singleValueLegacyExtendedProperty } from './singlevaluelegacyextendedproperty.interface';
import { multiValueLegacyExtendedProperty } from './multivaluelegacyextendedproperty.interface';
import { attachment } from './attachment.interface';

export interface event extends outlookItem {
  originalStartTimeZone: string;
  originalEndTimeZone: string;
  responseStatus: responseStatus;
  iCalUId: string;
  reminderMinutesBeforeStart: number;
  isReminderOn: boolean;
  hasAttachments: boolean;
  subject: string;
  body: itemBody;
  bodyPreview: string;
  importance: importance;
  sensitivity: sensitivity;
  start: dateTimeTimeZone;
  originalStart: Date;
  end: dateTimeTimeZone;
  location: location;
  locations: location[];
  isAllDay: boolean;
  isCancelled: boolean;
  isOrganizer: boolean;
  recurrence: patternedRecurrence;
  responseRequested: boolean;
  seriesMasterId: string;
  showAs: freeBusyStatus;
  type: eventType;
  attendees: attendee[];
  organizer: recipient;
  webLink: string;
  onlineMeetingUrl: string;
  attachments?: attachment[];
  singleValueExtendedProperties?: singleValueLegacyExtendedProperty[];
  multiValueExtendedProperties?: multiValueLegacyExtendedProperty[];
  calendar?: calendar;
  instances?: event[];
  extensions?: extension[]
}
